BCI_Data$ST <- trimws(sub(".*,", "", sub("\\(.*", "", BCI_Data$County)), "left")
BCI_Data <- BCI_Data[,c(14,15,2,3)]
colnames(BCI_Data) <- c("COUNTY", "STATE", "FIPS","Age_Adjusted_Incidence_Rate")
BCI_Data <- BCI_Data[1:3143,]
BCI_Data$Age_Adjusted_Incidence_Rate <- as.numeric(BCI_Data$Age_Adjusted_Incidence_Rate)
BCI_Data$FIPS <- as.integer(BCI_Data$FIPS)
# Rural/Urban Classification
RuUr <- read_xlsx("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Data/2020_UA_COUNTY.xlsx",sheet=1)
RuUr <- RuUr[,c("STATE","COUNTY","STATE_NAME","COUNTY_NAME","POPPCT_URB","POPPCT_RUR","URBANBLOCKS","RURALBLOCKS")]
RuUr$POPPCT_URB <- round((RuUr$POPPCT_URB*100),2)
RuUr$POPPCT_RUR <- round((RuUr$POPPCT_RUR*100),2)
RuUr$Rural_Urban <- ifelse(RuUr$POPPCT_URB>RuUr$POPPCT_RUR,1,0)
RuUr$FIPS <- as.integer(RuUr$STATE)*1000 + as.integer(RuUr$COUNTY)
RuUr <- RuUr[,c(9,10)]
BCI_Data <- merge(BCI_Data, RuUr, by="FIPS")
Data <- merge(Yearly_Data,BCI_Data,by="FIPS")
Data <- Data[,c(6,7,1,9,2,5,8)]
colnames(Data)<-c("COUNTY","STATE","FIPS","Rural_Urban","CLASS","PEST_KG","Age_Adjusted_Incidence_Rate")
NData <- sqldf("
SELECT *
FROM Data
ORDER BY CLASS, FIPS
")
NData <- na.omit(NData)
NData$Rural_Urban <- as.factor(NData$Rural_Urban)
NData
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY YEAR")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right")
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right")
Raw_data_1_15
write.csv(NData,"/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Data/Overall_AVG_Data_US.csv")
Data <- read.csv("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Data/Overall_AVG_Data_US.csv")
length(unique(Data$FIPS))
length(unique(Raw_data_1_15$COUNTY))
length(unique(Raw_data_1_15$FIPS))
Data <- read.csv("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Data/Overall_AVG_Data_US.csv")
Data
length(unique(Data$FIPS))
dt <- sqldf("
SELECT *
FROM Data
GROUP BY COUNTY, STATE, FIPS")
table(dt$Rural_Urban)
Data
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right")
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = scale(PEST_KG), color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right")
scale(Yealy_1_15_Plot$PEST_KG)
Yealy_1_15_Plot$PEST_KG <- scale(Yealy_1_15_Plot$PEST_KG)
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = scale(PEST_KG), color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right")
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_grid(CLASS ~ .)
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_wrap(~ CLASS, ncol = 4)  # Adjust ncol to 4 for a 2x4 grid
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4)  # Adjust ncol to your preference
setwd("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscript")
setwd("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts")
setwd("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts")
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4)  # Adjust ncol to your preference
ggsave("Yealy_1_15_Plot.png", plot = p, width = 16, height = 10, dpi = 300)
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4)
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4)
ggsave("Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10, dpi = 300)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10, dpi = 300)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10)
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
plotp
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
c("", "#81de79", "#47bc40", "#0d9b08")
c("#dfaa9d", "#d8766c", "#d2433a", "#cb0f09")
custom_colors <- c("#bbffb1", "#dfaa9d", "#81de79", "#d8766c", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "right") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10, dpi = 300)
plotp
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal()  +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
plotp
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
plotp
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
custom_colors <- c("#0d9b08", "#cb0f09", "#81de79", "#d8766c", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10, dpi = 300)
plotp
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
custom_colors <- c("#0d9b08", "#cb0f09", "#47bc40", "#d2433a", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10, dpi = 300)
plotp
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
custom_colors <- c("#0d9b08", "#cb0f09", "#47bc40", "#d2433a", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
plotp <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = plotp, width = 16, height = 10, dpi = 300)
Yealy_1_15_Plot_Overall <- sqldf("
SELECT YEAR, SUM(PEST_KG) AS PEST_KG
FROM Yealy_1_15_Plot
GROUP BY YEAR")
Yealy_1_15_Plot_Overall
ggplot(Yealy_1_15_Plot_Overall, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)") +
theme_minimal()
ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_point(aes(y = PEST_KG), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)") +
theme_minimal()
ggplot(Yealy_1_15_Plot_Overall, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)") +
theme_minimal()
library(patchwork)
pp2 <- ggplot(Yealy_1_15_Plot_Overall, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)") +
theme_minimal()
cp <- plotp / pp2
cp
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = cp, width = 16, height = 10, dpi = 300)
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, AVG(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
custom_colors <- c("#0d9b08", "#cb0f09", "#47bc40", "#d2433a", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
pp1 <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = cp, width = 16, height = 10, dpi = 300)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = pp1, width = 16, height = 10, dpi = 300)
Raw_data_1_15
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, SUM(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, SUM(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
custom_colors <- c("#0d9b08", "#cb0f09", "#47bc40", "#d2433a", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
pp1 <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = pp1, width = 16, height = 10, dpi = 300)
pp1
Yealy_1_15_Plot <- sqldf("
SELECT CLASS, YEAR, SUM(PEST_KG) AS PEST_KG
FROM Raw_data_1_15
GROUP BY CLASS,YEAR")
desired_order <- c("CARBAMATES","NEONICOTINOIDS","ORGANOCHLORINES","ORGANOPHOSPHATES","PYRETHROIDS","TRIAZINES","PHOSPHONATES","MISCELLENEOUS")
Yealy_1_15_Plot$CLASS <- factor(Yealy_1_15_Plot$CLASS, levels = desired_order)
custom_colors <- c("#0d9b08", "#cb0f09", "#47bc40", "#0d9b08", "#d2433a","#47bc40", "#cb0f09", "#0d9b08")
pp1 <- ggplot(Yealy_1_15_Plot, aes(x = YEAR)) +
geom_line(aes(y = PEST_KG, color = CLASS), size = 0.8) +
labs(x = "Year", y = "Amount of Pesticide (KG)", color = "Class") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ CLASS, scales = "free_y", ncol = 4) +
scale_color_manual(values = custom_colors)
ggsave("/Users/harishneelam/Desktop/MSU_Classes/1ProjectsR/Manuscripts/Yealy_1_15_Plot.png", plot = pp1, width = 16, height = 10, dpi = 300)
pp1
Yealy_1_15_Plot
ccPlot <- sqldf("SELECT YEAR, SUM(PEST_KG) AS PEST_KG
FROM Yealy_1_15_Plot
GROUP BY YEAR")
ccPlot
ccPlot <- sqldf("SELECT YEAR, AVG(PEST_KG) AS PEST_KG
FROM Yealy_1_15_Plot
GROUP BY YEAR")
ccPlot
library(rvest)
library(rvest)
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam&hl=en&as_sdt=0,23")
abs <- page %>% html_nodes ("#gs_rs gs_fma_s") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam&hl=en&as_sdt=0,23")
abs <- page %>% html_nodes ("#gs_fma_abs") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam&hl=en&as_sdt=0,23")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_rs") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam&hl=en&as_sdt=0,23")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?hl=en&as_sdt=0%2C23&q=melanoma+detection+using+deep+learning+harish+Neelam&btnG=")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?hl=en&as_sdt=0%2C23&q=melanoma+detection+using+deep+learning+harish+Neelam")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?q=melanoma+detection+using+deep+learning+harish+Neelam")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs
abs <- replace(abs,"Abstract","")
abs
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs <- replace(abs,"Abstract","")
abs
page <- read_html("https://scholar.google.com/scholar?q=Sparse+Modelling+for+Feature+Learning+in+High+Dimensional+Data+Harish+Neelam")
abs <- page %>% html_nodes("#gs_res_ccl_mid .gs_fma") %>% html_text()
abs <- replace("Abstract","",abs)
abs
library(tidyverse)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
DesDir <- "/Users/harishneelam/Desktop/Quantgen/DS/NEW"
handle_setheaders(new_handle(), "accept" = "application/x-bibtex")
Generate_meta_data <- function(folder, meta_data){
output_folder <- "output"
full_path <- file.path(DesDir, folder, output_folder)
if (!dir.exists(full_path)){
dir.create(full_path, recursive = TRUE)
}
setwd(full_path)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses the ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n",
"Scientific name: ", publication$Scientific_Name, "\n",
"Common name: ", publication$Common_Name,"\n",
"DOI: ", publication$DOI, "\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
DesDir
dir(DesDir)
meta_data = read_xlsx("/Users/harishneelam/Downloads/Meta_Data.xlsx")[,-1]
meta_data = read.csv("/Users/harishneelam/Desktop/Quantgen/Meta Data/Meta_Data_Tags.csv")[,-1]
meta_data
folders = dir(DesDir)
folders
meta_data = read.csv("/Users/harishneelam/Desktop/Quantgen/Meta Data/Meta_Data_Tags.csv")[106:112,-1]
meta_data$Folder
Generate_meta_data(folder,meta_data)
folders = dir(DesDir)
meta_data = read.csv("/Users/harishneelam/Desktop/Quantgen/Meta Data/Meta_Data_Tags.csv")[106:112,-1]
for (i in c(1:length(folders))) {
Generate_meta_data(folders[i],meta_data[i])
}
library(tidyverse)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
DesDir <- "/Users/harishneelam/Desktop/Quantgen/DS/NEW"
handle_setheaders(new_handle(), "accept" = "application/x-bibtex")
Generate_meta_data <- function(folder, meta_data){
output_folder <- "output"
full_path <- file.path(DesDir, folder, output_folder)
if (!dir.exists(full_path)){
dir.create(full_path, recursive = TRUE)
}
setwd(full_path)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses the ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n",
"Scientific name: ", publication$Scientific_Name, "\n",
"Common name: ", publication$Common_Name,"\n",
"DOI: ", publication$DOI, "\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
folders = dir(DesDir)
for (i in c(1:length(folders))) {
print(folders[i],meta_data[i])
Generate_meta_data(folders[i],meta_data[i])
}
folders
folders[1]
for (i in c(1:length(folders))) {
print(i)
print(folders[i],meta_data[i])
Generate_meta_data(folders[i],meta_data[i])
}
for (i in c(1:length(folders))) {
print(i)
print(folders[i])
print(meta_data[i])
Generate_meta_data(folders[i],meta_data[i])
}
colnames(meta_data)
library(tidyverse)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
DesDir <- "/Users/harishneelam/Desktop/Quantgen/DS/NEW"
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
Generate_meta_data <- function(folder, meta_data){
output_folder <- "output"
full_path <- file.path(DesDir, folder, output_folder)
if (!dir.exists(full_path)){
dir.create(full_path, recursive = TRUE)
}
setwd(full_path)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses the ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n",
"Scientific name: ", publication$Scientific_Name, "\n",
"Common name: ", publication$Common_Name,"\n",
"DOI: ", publication$DOI, "\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
folders = dir(DesDir)
meta_data = read.csv("/Users/harishneelam/Desktop/Quantgen/Meta Data/Meta_Data_Tags.csv")[106:112,-1]
for (i in c(1:length(folders))) {
Generate_meta_data(folders[i],meta_data[i])
}
colnames(meta_data)
folders = dir(DesDir)
meta_data = read.csv("/Users/harishneelam/Desktop/Quantgen/Meta Data/Meta_Data_Tags.csv")[106:112,-1]
for (i in c(1:length(folders))) {
Generate_meta_data(folders[i],meta_data[i,])
}
